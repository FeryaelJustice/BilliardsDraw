plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.billiardsdraw.billiardsdraw"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // Security for apy key
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "API_KEY", "\"${properties.getProperty("API_KEY")}\""
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            buildConfigField 'String', 'api_url', '"http://localhost:8080/api"'
        }
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            buildConfigField 'String', 'api_url', '"https:/billiardsdraw.com/api"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {
        freeVersion {
            dimension "version"
            applicationIdSuffix ".free"
            versionNameSuffix "-free"
            buildConfigField 'String', 'free_url', '"https://billiardsdraw.com/free"'
            buildConfigField 'Boolean', 'isPremium', 'false'
        }
        premiumVersion {
            dimension "version"
            applicationIdSuffix ".premium"
            versionNameSuffix "-premium"
            buildConfigField 'String', 'premium_url', '"https://billiardsdraw.com/premium"'
            buildConfigField 'Boolean', 'isPremium', 'true'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // ANDROID
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    // COMPOSE
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha13'
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.compose.material:material:1.1.1'
    // TESTING
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    // NAVIGATION
    def nav_version = "2.4.2"
    implementation("androidx.navigation:navigation-compose:$nav_version")

    // EXTERNAL
    // Color picker
    implementation "com.github.skydoves:colorpicker-compose:1.0.0"
    // Image Load
    implementation('io.coil-kt:coil-compose:2.1.0')
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
}