plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.billiardsdraw.billiardsdraw"
        minSdk 21
        targetSdk 33
        versionCode 3
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // Security for api key (better way is using a function, what we are using noww)
        /* Old way
        def propFile = rootProject.file("./local.properties")
        def properties = new Properties()
        properties.load(new FileInputStream(propFile))
        buildConfigField("String", "API_KEY", properties['API_KEY'])
        */
        // Best google recommended way
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        buildConfigField("String", "API_KEY", properties.getProperty("API_KEY")?:"\"api1234\"")
        signingConfig signingConfigs.debug
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            buildConfigField 'String', 'api_url', '"http://localhost:8080/api"'
        }
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            buildConfigField 'String', 'api_url', '"https:/billiardsdraw.com/api"'
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {
        freeVersion {
            dimension "version"
            applicationIdSuffix ""
            versionNameSuffix "-free"
            buildConfigField 'String', 'free_url', '"https://billiardsdraw.com"'
            buildConfigField 'Boolean', 'isPremium', 'false'
        }
        premiumVersion {
            dimension "version"
            applicationIdSuffix ""
            versionNameSuffix "-premium"
            buildConfigField 'String', 'premium_url', '"https://billiardsdraw.com/premium"'
            buildConfigField 'Boolean', 'isPremium', 'true'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        kotlin.sourceSets.all {
            languageSettings.optIn("kotlin.RequiresOptIn")
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_kotlin_compiler_extension_version
    }
    kapt{
        correctErrorTypes true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.billiardsdraw.billiardsdraw'
}

dependencies {
    // ANDROID
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // COMPOSE
    def composeBom = platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation composeBom
    androidTestImplementation composeBom

    // implementation 'androidx.compose.animation:animation'
    // implementation 'androidx.compose.compiler:compiler'
    // implementation 'androidx.compose.runtime:runtime'
    // implementation "androidx.compose.animation:animation-core"
    // implementation("androidx.compose.ui:ui-geometry")
    // implementation("androidx.compose.ui:ui-graphics")
    // implementation("androidx.compose.foundation:foundation-layout")
    // implementation("androidx.compose.ui:ui-text")
    // implementation("androidx.compose.ui:ui-util")
    // implementation("androidx.compose.ui:ui-viewbinding")
    // implementation "androidx.compose.ui:ui-tooling"

    // MATERIAL
    // Standard Material
    implementation "com.google.android.material:material:$google_material_version"
    // Compose Material Standard
    implementation 'androidx.compose.material:material'
    // Icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Compose Material 3
    implementation 'androidx.compose.material3:material3'
    // Or skip material design and build directly on top of fundamental components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'

    // Integration of compose with activities
    implementation "androidx.activity:activity-compose:$activity_compose_version"

    // TESTING
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    // DEBUG
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    // Third party debug
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'

    // Hilt
    implementation "androidx.hilt:hilt-navigation-compose:$androidx_hilt_navigation_compose_version"
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"
    kapt "androidx.hilt:hilt-compiler:$androidx_hilt_compiler_version"

    // COROUTINES
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")
    // Kotlin coroutines play service
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"
    // Architectural Components (lifecycle)
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"

    // FIREBASE
    // BOM
    def firebaseBom = platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    implementation firebaseBom
    // Crashlytics
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation "com.google.firebase:firebase-crashlytics-buildtools:$firebase_crashlytics_buildtools_version"
    // Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Performance
    implementation 'com.google.firebase:firebase-perf-ktx'
    // Auth
    implementation 'com.google.firebase:firebase-auth-ktx'
    // Fire store
    implementation 'com.google.firebase:firebase-firestore-ktx'
    // Cloud store
    implementation 'com.google.firebase:firebase-storage-ktx'

    // Accompanist
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_navigation_animation_version"

    // LOGIN
    // Google
    implementation "com.google.android.gms:play-services-auth:$play_services_auth_version"
    // Facebook
    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'

    // ADS
    implementation "com.google.android.gms:play-services-ads:$play_services_ads_version"
    implementation "com.google.firebase:firebase-ads:$firebase_ads_version"

    // NAVIGATION
    // Compose
    implementation("androidx.navigation:navigation-compose:$nav_version")
    // Navigation component
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Live Data
    implementation 'androidx.compose.runtime:runtime-livedata'

    // Billing Library Google Play
    implementation("com.android.billingclient:billing-ktx:$android_billing_ktx_version")

    // Room database
    implementation("androidx.room:room-runtime:$roomVersion")
    kapt("androidx.room:room-compiler:$roomVersion")
    implementation("androidx.room:room-ktx:$roomVersion")
    testImplementation("androidx.room:room-testing:$roomVersion")


    // EXTERNAL
    // Color picker
    implementation "com.github.skydoves:colorpicker-compose:$colorpicker_version"

    // Image Load
    implementation("io.coil-kt:coil-compose:$coil_ktx_compose_version")

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
}